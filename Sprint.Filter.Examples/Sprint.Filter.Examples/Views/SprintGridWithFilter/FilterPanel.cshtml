@model Sprint.Filter.Examples.Models.ActionGridOptions
@{
    Layout = null;
    var gridKey = ViewData["gridKey"].ToString();
}
<div class="left-sidebar">
    <input type="text" class="search" placeholder="Search" data-update-grid="@gridKey" value="@Model.SearchString" />
    <div class="filter-panel">
        <table>
            <tr>
                <td>
                    <span class="filter-panel-title">My filters</span>
                </td>
                <td>
                    <a class="filter-background filter-background-white" data-filter="@gridKey" href="@Url.Action("Filter")">
                        <i class="filter-icon f-filter"></i>
                    </a>
                </td>
                <td>
                    <a class="filter-background filter-background-white" data-grid-setting="@gridKey" href="@Url.Action("GridSetting", new { gridKey = gridKey })">
                        <i class="filter-icon f-column"></i>
                    </a>
                </td>
                <td>
                    <a class="filter-background filter-background-white" data-grid-save="@gridKey" href="@Url.Action("Create", "SprintGridState", new { gridKey = gridKey })">
                        <i class="filter-icon f-save"></i>
                    </a>
                </td>                
                <td>
                    <a class="filter-background filter-background-white" data-clear-state="@gridKey" href="@Url.Action("Clear", "SprintGridState", new { gridKey = gridKey })">
                        <i class="filter-icon f-clear "></i>
                    </a>
                </td>
            </tr>
        </table>
    </div>

    <div data-filter-list="@gridKey" data-action="@Url.Action("StateList", "SprintGridState", new { gridKey = gridKey })">
        @Html.Action("StateList", "SprintGridState", new { gridKey = gridKey, stateId = Model.LoadFilterId })    
    </div>

</div>