@using System.Web.Script.Serialization
@using Sprint.Filter.Examples.Controllers
@model IQueryable<Sprint.Filter.Examples.Models.Product>
@{    
    var javaScriptSerializer = new JavaScriptSerializer();

    var rawOptions = (object)Html.Encode(javaScriptSerializer.Serialize(ViewData["filterOptions"]));
}
<div id="products" >    
    <div class="alert alert-block alert-info">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        <h4>Query:</h4>
        @Model.ToString()
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>
                    Id
                </th>
                <th>
                    Name
                </th>
                <th>
                    CategoryName
                </th>
                <th>
                    UnitPrice
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Model)
            {
                <tr>
                    <td>@product.ID</td>
                    <td>@product.Name</td>
                    <td>@(product.Category!=null?product.Category.Name:"")</td>
                    <td>@product.UnitPrice</td>
                </tr>
            }
        </tbody>
    </table>    
    @Html.Hidden(SaveLoadFilterController.FilterKey,rawOptions)
</div>