@using Sprint.Filter.Examples.Attributes
@if (ViewData.TemplateInfo.TemplateDepth > 1)
{
	@ViewData.ModelMetadata.SimpleDisplayText
}
else
{
    <fieldset>
        @foreach (var prop in ViewData.ModelMetadata.Properties.Where(pm => pm.ShowForEdit && !ViewData.TemplateInfo.Visited(pm)))
        {            
            if (prop.HideSurroundingHtml)
            {
                @Html.Editor(prop.PropertyName)
            }
            else
            {
                <div class="control-group">
                    <label class="control-label bold" for="@prop.PropertyName">@prop.DisplayName</label>
                    <div class="controls">
                        @if (prop.AdditionalValues.ContainsKey(DropDownListAttribute.Key))
                        {
                            
                            var dropDownListOptions = prop.AdditionalValues[DropDownListAttribute.Key] as Tuple<string, string, string>;
                            if (dropDownListOptions == null)
                            {
                                throw new ArgumentNullException();
                            }
                            
                            var sourceProperty = dropDownListOptions.Item1;
                            var optionLabel = dropDownListOptions.Item2;
                            var css = dropDownListOptions.Item3;

                            var source = ViewData.ModelMetadata.Properties.First(x => x.PropertyName == sourceProperty).Model as IEnumerable<SelectListItem>;
                            
                            @Html.DropDownList(prop.PropertyName, source, optionLabel, new {@class = css})                            
                        }
                        else
                        {
                            @Html.Editor(prop.PropertyName, prop.TemplateHint,(object)Model)
                        }
                        <br/>
                        @Html.ValidationMessage(prop.PropertyName)
                        @if (!string.IsNullOrEmpty(prop.Description))
                        {
                            <p class="help-block">@prop.Description</p>
                        }
                    </div>
                </div>
            }
        }
    </fieldset>
}
